[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "ion-type-analysis"
version = "0.0.1"
description = "Short Description TODO"
authors = [
    {name = "Adriano Rutz", email = "adafede@gmail.com"},
]
requires-python = "<4.0,>=3.10"
keywords = ["Mass Spectrometry", "Ion types", "In Source Fragmentation", "Open Science"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only"
]
license = "LICENSE"
readme = "README.md"
package-mode = false

dependencies = [
    "beautifulsoup4<5.0.0,>=4.12.3",
    "lightgbm<5.0.0,>=4.5.0",
    "llvmlite<1.0.0,>=0.43.0",
    "msbuddy<1.0.0,>=0.3.8",
    "numba<1.0.0,>=0.60.0",
    "pandas<3.0.0,>=2.2.3",
    "polars<2.0.0,>=1.15.0",
    "PyYAML<7.0.0,>=6.0.2",
    "rdkit<2025.0.0,>=2024.3.6",
    "requests<3.0.0,>=2.32.3",
    "tqdm<5.0.0,>=4.67.0",
]

[dependency-groups]
dev = [
    "black<25.0.0,>=24.10.0",
    "coverage<8.0.0,>=7.6.7",
    "flake8<8.0.0,>=7.1.1",
    "importlib-metadata<9.0.0,>=8.5.0",
    "isort<6.0.0,>=5.13.2",
    "pytest<9.0.0,>=8.3.3",
    "pytest-asyncio<1.0.0,>=0.23.5",
    "pytest-cov<7.0.0,>=6.0.0",
    "pytest-mock<4.0.0,>=3.14.0",
    "pytest-xdist<4.0.0,>=3.6.1",
    "requests-mock<2.0.0,>=1.12.1",
    "tox<5.0.0,>=4.23.2",
]

[options.packages.find]
where = "src"

[project.urls]
homepage = "https://github.com/zamboni-lab/ion-type-analysis"
repository = "https://github.com/zamboni-lab/ion-type-analysis"
documentation = "https://github.com/zamboni-lab/ion-type-analysis"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[tool.doc8]
max-line-length = 120

[tool.flake8]
# check  .flake8

[tool.pdm.build]
includes = ["LICENSE"]
excludes = [".bumpversion.cfg", ".coveragerc", ".flake8", ".readthedocs.yml", "CITATION.cff", "uv.lock", "tox.ini"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
unfixable = [
    # do not autoremove commented out code
    "ERA",
]
target-version = "py312"
line-length = 88
extend-select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry_plugin_export"]
required-imports = ["from __future__ import annotations"]
