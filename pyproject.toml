[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "ion-type-analysis"
version = "0.0.1"
description = "Short Description TODO"
authors = [
    {name = "Adriano Rutz", email = "adafede@gmail.com"},
]
requires-python = "<4.0,>=3.10"
keywords = ["Mass Spectrometry", "Ion types", "In Source Fragmentation", "Open Science"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only"
]
license = "LICENSE"
readme = "README.md"
package-mode = false

dependencies = [
    "beautifulsoup4>=4.12.3,<5.0.0",
    "lightgbm>=4.5.0,<5.0.0",
    "llvmlite>=0.43.0,<1.0.0",
    "msbuddy>=0.3.8,<1.0.0",
    "numba>=0.60.0,<1.0.0",
    "pandas>=2.2.3,<3.0.0",
    "polars>=1.16.0,<2.0.0",
    "PyYAML>=6.0.2,<7.0.0",
    "rdkit>=2024.3.6,<2025.0.0",
    "requests>=2.32.3,<3.0.0",
    "tqdm>=4.67.0,<5.0.0",
]

[dependency-groups]
dev = [
    "black>=24.10.0,<25.0.0",
    "coverage>=7.6.7,<8.0.0",
    "flake8>=7.1.1,<8.0.0",
    "importlib-metadata>=8.5.0,<9.0.0",
    "isort>=5.13.2,<6.0.0",
    "pytest>=8.3.4,<9.0.0",
    "pytest-asyncio>=0.23.5,<1.0.0",
    "pytest-cov>=6.0.0,<7.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-xdist>=3.6.1,<4.0.0",
    "requests-mock>=1.12.1,<2.0.0",
    "tox>=4.23.2,<5.0.0",
]

[options.packages.find]
where = "src"

[project.urls]
homepage = "https://github.com/zamboni-lab/ion-type-analysis"
repository = "https://github.com/zamboni-lab/ion-type-analysis"
documentation = "https://github.com/zamboni-lab/ion-type-analysis"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[tool.doc8]
max-line-length = 120

[tool.flake8]
# check  .flake8

[tool.pdm.build]
includes = ["LICENSE"]
excludes = [".bumpversion.cfg", ".coveragerc", ".flake8", ".readthedocs.yml", "CITATION.cff", "uv.lock", "tox.ini"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
unfixable = [
    # do not autoremove commented out code
    "ERA",
]
target-version = "py312"
line-length = 88
extend-select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry_plugin_export"]
required-imports = ["from __future__ import annotations"]
