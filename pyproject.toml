[tool.poetry]
name = "ion-type-analysis"
version = "0.0.1"
description = "Short Description TODO"
authors = ["Adriano Rutz <rutz@imsb.biol.ethz.ch>"]
license = "LICENSE"
readme = "README.md"
homepage = "https://github.com/zamboni-lab/ion-type-analysis"
repository = "https://github.com/zamboni-lab/ion-type-analysis"
documentation = "https://github.com/zamboni-lab/ion-type-analysis"
keywords = ["Mass Spectrometry", "Ion types", "In Source Fragmentation", "Open Science"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only"
]
exclude = [
    ".bumpversion.cfg",
    ".coveragerc",
    ".flake8",
    ".readthedocs.yml",
    "CITATION.cff",
    "poetry.lock",
    "tox.ini"
]
include = [
    "LICENSE",
]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
beautifulsoup4 = "^4.12.3"
pandas = "^2.2.3"
PyYAML = "^6.0.2"
requests = "^2.32.3"
tqdm = "^4.66.5"


[tool.poetry.extras]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinxcontrib-napoleon"]

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
coverage = "^7.6.3"
flake8 = "^7.1.1"
importlib-metadata = "^7.2.1" 
isort = "^5.13.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.23.5"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"
requests-mock = "^1.12.1"
tox = "^4.22.0"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.doc8]
max-line-length = 120

[tool.flake8]
# check  .flake8

[tool.ruff]
unfixable = [
    # do not autoremove commented out code
    "ERA",
]
target-version = "py312"
line-length = 88
extend-select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry_plugin_export"]
required-imports = ["from __future__ import annotations"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[options.packages.find]
where = "src"

[tool.setuptools_scm]
